{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/tagSection.js","webpack:///./src/templates/blog-post.js"],"names":["Tag","url","children","to","toLowerCase","className","TagSection","tagSelection","maxTags","node","frontmatter","tags","slice","map","tag","replace","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","description","excerpt","style","marginTop","rhythm","marginBottom","fontFamily","scale","display","date","dangerouslySetInnerHTML","__html","html","citations","citation","includes","href","matches","match","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","React","Component","pageQuery"],"mappings":"0IAUeA,G,UANH,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAClB,OACE,kBAAC,OAAD,CAAMC,GAAE,SAAWF,EAAIG,cAAiBC,UAAU,YAAYH,KCWnDI,IAdI,SAAC,GAAuB,IACrCC,EADgBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAO7B,OAJEF,EADCC,EACcC,EAAKC,YAAYC,KAAKC,MAAM,EAAEJ,GAE9BC,EAAKC,YAAYC,KAGhC,6BAASN,UAAU,gBACjB,0BAAMA,UAAU,mBAAhB,SADF,IACkDE,EAAaM,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,CAAKb,IAAKa,EAAIC,QAAQ,MAAM,MAAOD,S,gOCH3GE,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKR,YAAYgB,MACxBK,YAAab,EAAKR,YAAYqB,aAAeb,EAAKc,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,EACdC,WAAW,YAGZnB,EAAKR,YAAYgB,OAEpB,uBACEO,MAAK,iBACAK,aAAM,IADN,CAEHC,QAAQ,QACRH,aAAcD,YAAO,MAGtBjB,EAAKR,YAAY8B,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQxB,EAAKyB,QACjD,kBAAC,IAAD,CAAYlC,KAAMS,IAEdA,EAAKR,YAAYkC,UAEb,6BACE,yCACA,6BACA,4BAEI1B,EAAKR,YAAYkC,UAAU/B,KACzB,SAAAgC,GACE,GAAGA,EAASC,SAAS,QACnB,OACE,4BACE,8BACE,uBAAGC,KAAMF,GAAWA,KAK1B,IAAIG,EAAUH,EAASI,MAAM,4BAC7B,OACE,4BACGD,EAAQ,GADX,IAEE,8BAAOA,EAAQ,UAWjC,GAEN,wBACEf,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLM,QAAQ,OACRW,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGzB,GACC,kBAAC,OAAD,CAAMzB,GAAIyB,EAAS0B,OAAOC,KAAMC,IAAI,QAApC,KACK5B,EAASlB,YAAYgB,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAM1B,GAAI0B,EAAKyB,OAAOC,KAAMC,IAAI,QAC7B3B,EAAKnB,YAAYgB,MADpB,W,GApGe+B,IAAMC,WAgHtB1C,YAER,IAAM2C,EAAS","file":"component---src-templates-blog-post-js-cb75d09e01c1ed2e84b9.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport './tag.css';\n\nconst Tag = ({ url, children }) => {\n  return (\n    <Link to={`/tags/${url.toLowerCase()}`} className=\"tag-link\">{children}</Link>\n  )\n};\n\nexport default Tag;\n","import React from 'react';\nimport Tag from './tag';\n\nconst TagSection = ({ maxTags, node }) => {\n  let tagSelection;\n  if(maxTags) {\n    tagSelection = node.frontmatter.tags.slice(0,maxTags);\n  } else {\n    tagSelection = node.frontmatter.tags;\n  }\n  return (\n    <section className=\"article-tags\">\n      <span className=\"tags-list-start\">Tags:</span> {tagSelection.map(tag => <Tag url={tag.replace(/\\s/g,'-')}>{tag}</Tag>)}\n    </section>\n  );\n}\n\nexport default TagSection;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport TagSection from '../components/tagSection';\nimport { rhythm, scale } from '../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n                fontFamily: `'Prata'`,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <TagSection node={post} />\n            {\n              post.frontmatter.citations ?\n                (\n                  <div>\n                    <div>Sources:</div>\n                    <br/>\n                    <ol>\n                      {\n                        post.frontmatter.citations.map(\n                          citation => {\n                            if(citation.includes('http')) {\n                              return (\n                                <li>\n                                  <cite>\n                                    <a href={citation}>{citation}</a>\n                                  </cite>\n                                </li>\n                              )\n                            } else {\n                              let matches = citation.match(/(.*\\([\\d]{4}\\)\\.)\\s+(.*)/);\n                              return (\n                                <li>\n                                  {matches[1]}&nbsp;\n                                  <cite>{matches[2]}</cite>\n                                </li>\n                              )\n                            }\n                          }\n                        )\n                      }\n                    </ol>\n                  </div>\n                )\n              :\n                ''\n          }\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        citations\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/pages/index.js"],"names":["Tag","url","children","to","toLowerCase","className","BlogIndex","props","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","published","key","style","marginBottom","rhythm","boxShadow","date","dangerouslySetInnerHTML","__html","description","excerpt","tags","slice","tag","pageQuery"],"mappings":"6LAUeA,G,UANH,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAClB,OACE,kBAAC,OAAD,CAAMC,GAAE,SAAWF,EAAIG,cAAiBC,UAAU,YAAYH,K,kCCNlE,0CA2DeI,UA9CG,SAACC,GAAW,IACpBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACRC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUF,EAAME,SAAUI,MAAOH,GACvC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,CAAKJ,SAAUA,IACdK,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OAAIH,EAAKC,YAAYG,UAEjB,6BAASC,IAAKL,EAAKE,OAAOC,MACxB,gCACE,wBACEG,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWxB,GAAIe,EAAKE,OAAOC,MACjDR,IAGL,+BAAQK,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,YAInD,6BAAS3B,UAAU,gBACjB,0BAAMA,UAAU,mBAAhB,SADF,IACkDa,EAAKC,YAAYc,KAAKC,MAAM,EAAE,GAAGjB,KAAI,SAAAkB,GAAG,OAAI,kBAAC,EAAD,CAAKlC,IAAKkC,GAAMA,QAK3G,UAvCjB,IAgDaC,EAAS","file":"component---src-pages-index-js-7bbbe7dd7190718ae0bc.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport './tag.css';\n\nconst Tag = ({ url, children }) => {\n  return (\n    <Link to={`/tags/${url.toLowerCase()}`} className=\"tag-link\">{children}</Link>\n  )\n};\n\nexport default Tag;\n","import 'typeface-audiowide';\nimport 'typeface-prata';\nimport 'typeface-spectral';\nimport React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Tag from '../components/tag';\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\nimport './index.css';\n\nconst BlogIndex = (props) => {\n  const { data, location } = props;\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio location={location} />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        if (node.frontmatter.published) {\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n              <section className=\"article-tags\">\n                <span className=\"tags-list-start\">Tags:</span> {node.frontmatter.tags.slice(0,3).map(tag => <Tag url={tag}>{tag}</Tag>)}\n              </section>\n            </article>\n          )\n        } else {\n          return null\n        }\n      })}\n    </Layout>\n  )\n};\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n            published\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}